
;;; GENERATED BY CHICKEN-BIND FROM sqlite3-api.h

(begin
  (begin
    (define sqlite3_close
      (foreign-lambda integer "sqlite3_close" (c-pointer "sqlite3"))))
  (begin
    (define sqlite3_exec
      (foreign-lambda
        integer
        "sqlite3_exec"
        (c-pointer "sqlite3")
        c-string
        (function
          integer
          ((c-pointer void)
           integer
           (c-pointer (c-pointer char))
           (c-pointer (c-pointer char))))
        (c-pointer void)
        (c-pointer (c-pointer char)))))
  (begin
    (define sqlite3_open
      (foreign-lambda
        integer
        "sqlite3_open"
        c-string
        (c-pointer (c-pointer "sqlite3")))))
  (begin
    (define sqlite3_errcode
      (foreign-lambda integer "sqlite3_errcode" (c-pointer "sqlite3"))))
  (begin
    (define sqlite3_errmsg
      (foreign-lambda c-string "sqlite3_errmsg" (c-pointer "sqlite3"))))
  (begin
    (define sqlite3_extended_errcode
      (foreign-lambda
        integer
        "sqlite3_extended_errcode"
        (c-pointer "sqlite3"))))
  (begin
    (define sqlite3_prepare_v2
      (foreign-lambda
        integer
        "sqlite3_prepare_v2"
        (c-pointer "sqlite3")
        c-string
        integer
        (c-pointer (c-pointer "sqlite3_stmt"))
        (c-pointer (c-pointer (const char))))))
  (begin
    (define sqlite3_next_stmt
      (foreign-lambda
        (c-pointer "sqlite3_stmt")
        "sqlite3_next_stmt"
        (c-pointer "sqlite3")
        (c-pointer "sqlite3_stmt"))))
  (begin
    (define sqlite3_step
      (foreign-lambda integer "sqlite3_step" (c-pointer "sqlite3_stmt"))))
  (begin
    (define sqlite3_reset
      (foreign-lambda integer "sqlite3_reset" (c-pointer "sqlite3_stmt"))))
  (begin
    (define sqlite3_finalize
      (foreign-lambda integer "sqlite3_finalize" (c-pointer "sqlite3_stmt"))))
  (begin
    (define sqlite3_changes
      (foreign-lambda integer "sqlite3_changes" (c-pointer "sqlite3"))))
  (begin
    (define sqlite3_total_changes
      (foreign-lambda integer "sqlite3_total_changes" (c-pointer "sqlite3"))))
  (begin
    (define sqlite3_last_insert_rowid
      (foreign-lambda
        integer64
        "sqlite3_last_insert_rowid"
        (c-pointer "sqlite3"))))
  (begin
    (define sqlite3_sql
      (foreign-lambda c-string "sqlite3_sql" (c-pointer "sqlite3_stmt"))))
  (begin
    (define sqlite3_get_autocommit
      (foreign-lambda bool "sqlite3_get_autocommit" (c-pointer "sqlite3"))))
  (begin
    (define sqlite3_bind_parameter_count
      (foreign-lambda
        integer
        "sqlite3_bind_parameter_count"
        (c-pointer "sqlite3_stmt"))))
  (begin
    (define sqlite3_bind_parameter_index
      (foreign-lambda
        integer
        "sqlite3_bind_parameter_index"
        (c-pointer "sqlite3_stmt")
        c-string)))
  (begin
    (define sqlite3_bind_parameter_name
      (foreign-lambda
        c-string
        "sqlite3_bind_parameter_name"
        (c-pointer "sqlite3_stmt")
        integer)))
  (begin
    (define sqlite3_bind_blob
      (foreign-lambda
        integer
        "sqlite3_bind_blob"
        (c-pointer "sqlite3_stmt")
        integer
        blob
        integer
        (function void ((c-pointer void))))))
  (begin
    (define sqlite3_bind_double
      (foreign-lambda
        integer
        "sqlite3_bind_double"
        (c-pointer "sqlite3_stmt")
        integer
        double)))
  (begin
    (define sqlite3_bind_int
      (foreign-lambda
        integer
        "sqlite3_bind_int"
        (c-pointer "sqlite3_stmt")
        integer
        integer)))
  (begin
    (define sqlite3_bind_int64
      (foreign-lambda
        integer
        "sqlite3_bind_int64"
        (c-pointer "sqlite3_stmt")
        integer
        integer64)))
  (begin
    (define sqlite3_bind_null
      (foreign-lambda
        integer
        "sqlite3_bind_null"
        (c-pointer "sqlite3_stmt")
        integer)))
  (begin
    (define sqlite3_bind_text
      (foreign-lambda
        integer
        "sqlite3_bind_text"
        (c-pointer "sqlite3_stmt")
        integer
        c-string
        integer
        (function void ((c-pointer void))))))
  (begin
    (define sqlite3_bind_zeroblob
      (foreign-lambda
        integer
        "sqlite3_bind_zeroblob"
        (c-pointer "sqlite3_stmt")
        integer
        integer)))
  (begin
    (define sqlite3_column_count
      (foreign-lambda
        integer
        "sqlite3_column_count"
        (c-pointer "sqlite3_stmt"))))
  (begin
    (define sqlite3_column_blob
      (foreign-lambda
        (c-pointer (const void))
        "sqlite3_column_blob"
        (c-pointer "sqlite3_stmt")
        integer)))
  (begin
    (define sqlite3_column_bytes
      (foreign-lambda
        integer
        "sqlite3_column_bytes"
        (c-pointer "sqlite3_stmt")
        integer)))
  (begin
    (define sqlite3_column_double
      (foreign-lambda
        double
        "sqlite3_column_double"
        (c-pointer "sqlite3_stmt")
        integer)))
  (begin
    (define sqlite3_column_int
      (foreign-lambda
        integer
        "sqlite3_column_int"
        (c-pointer "sqlite3_stmt")
        integer)))
  (begin
    (define sqlite3_column_int64
      (foreign-lambda
        integer64
        "sqlite3_column_int64"
        (c-pointer "sqlite3_stmt")
        integer)))
  (begin
    (define sqlite3_column_text
      (foreign-lambda
        c-string
        "sqlite3_column_text"
        (c-pointer "sqlite3_stmt")
        integer)))
  (begin
    (define sqlite3_column_type
      (foreign-lambda
        integer
        "sqlite3_column_type"
        (c-pointer "sqlite3_stmt")
        integer)))
  (begin
    (define sqlite3_column_name
      (foreign-lambda
        c-string
        "sqlite3_column_name"
        (c-pointer "sqlite3_stmt")
        integer)))
  (begin
    (define sqlite3_busy_handler
      (foreign-lambda
        integer
        "sqlite3_busy_handler"
        (c-pointer "sqlite3")
        (function integer ((c-pointer void) integer))
        (c-pointer void))))
  (begin
    (define sqlite3_busy_timeout
      (foreign-lambda
        integer
        "sqlite3_busy_timeout"
        (c-pointer "sqlite3")
        integer))))

;;; END OF FILE
